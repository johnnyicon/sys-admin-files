#!/bin/sh
#
# custom haproxy init.d script, by Mattias Geniar <mattias@nucleus.be>
#
# haproxy         starting and stopping the haproxy load balancer
#
# chkconfig: 345 55 45
# description: haproxy is a TCP loadbalancer
# probe: true

HAPROXY_BIN=/usr/local/sbin/haproxy
HAPROXY_CONF=/etc/haproxy/haproxy.conf
HAPROXY_PID=/var/run/haproxy.pid
HAPROXY_LOCK=/var/lock/subsys/haproxy

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

[ -f ${HAPROXY_BIN} ] || exit 0

[ -f ${HAPROXY_CONF} ] || exit 0

# Define our actions
checkconfig() {
	# Check the config file for errors
	${HAPROXY_BIN} -c -q -f ${HAPROXY_CONF}
	if [ $? -ne 0 ]; then
    		echo "Errors found in configuration file."
    		return 1
  	fi

	# We're OK!
	return 0
}

start() {
	# Check config
	${HAPROXY_BIN} -c -q -f ${HAPROXY_CONF}
        if [ $? -ne 0 ]; then
                echo "Errors found in configuration file."
                return 1
        fi

	echo -n "Starting HAProxy: "
	daemon ${HAPROXY_BIN} -D -f ${HAPROXY_CONF} -p ${HAPROXY_PID}

	RETVAL=$?
	echo
  	[ $RETVAL -eq 0 ] && touch ${HAPROXY_LOCK}
  	return $RETVAL
}

stop() {
	echo -n "Shutting down HAProxy: "
  	killproc haproxy -USR1

  	RETVAL=$?
  	echo
  	[ $RETVAL -eq 0 ] && rm -f ${HAPROXY_LOCK}
  	[ $RETVAL -eq 0 ] && rm -f ${HAPROXY_PID}
  	return $RETVAL
}

restart() {
	${HAPROXY_BIN} -c -q -f ${HAPROXY_CONF}
        if [ $? -ne 0 ]; then
                echo "Errors found in configuration file."
                return 1
        fi

	stop
  	start
}

check() {
  	${HAPROXY_BIN} -c -q -V -f ${HAPROXY_CONF}
}

rhstatus() {
  	status haproxy
}

reload() {
	${HAPROXY_BIN} -c -q -f ${HAPROXY_CONF}
        if [ $? -ne 0 ]; then
                echo "Errors found in configuration file."
                return 1
        fi

	echo -n "Reloading HAProxy config: "
	${HAPROXY_BIN} -f ${HAPROXY_CONF} -p ${HAPROXY_PID} -sf $(cat ${HAPROXY_PID})

	success $"Reloading HAProxy config: "
	echo
}


# Possible parameters
case "$1" in
  start)
        start
	;;
  stop)
	stop
        ;;
  status)
        rhstatus
        ;;
  restart)
	restart
        ;;
  reload)
        reload
        ;;
  checkconfig)
	check
	;;
  *)
        echo "Usage: haproxy {start|stop|status|restart|reload|checkconfig}"
        exit 1
esac

exit 0

